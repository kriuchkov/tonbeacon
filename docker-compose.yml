version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080" 
      - "50051:50051"
    depends_on:
      - postgres
      - kafka
    environment:
      - TONBEACON_DB_CONN_STRING=postgres://user:password@postgres:5432/tonbeacon?sslmode=disable
      - TONBEACON_KAFKA_BROKERS=kafka:9092
      - TONBEACON_KAFKA_TOPIC=tonbeacon_events
      - TONBEACON_GRPC_PORT=:50051
      - TONBEACON_TON_SERVER_ADDR=5.9.10.47:49206
      - TONBEACON_TON_SERVER_KEY=n4VDv1pgo1eWpueRwPYdSkK4HMKp8N+a1POiSjiygQ0=
      - TONBEACON_MASTER_SEED=apple banana cherry 
    volumes:
      - ./:/app 

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=tonbeacon
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user"]
      interval: 5s
      timeout: 5s
      retries: 5

  flyway:
    image: flyway/flyway:10
    command: -url=jdbc:postgresql://postgres:5432/tonbeacon -user=user -password=password -connectRetries=60 migrate
    volumes:
      - ./db/migrations:/flyway/sql
    depends_on:
      postgres:
        condition: service_healthy


  kafka:
    image: apache/kafka:3.8.0 
    ports:
      - "9092:9092"
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller 
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_LOG_DIRS=/var/lib/kafka/data
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 5s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  kafka_data: